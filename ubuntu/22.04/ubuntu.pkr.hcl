source "proxmox" "autogenerated_1" {
  boot_command = ["c",
  "<wait><wait><wait>linux /casper/vmlinuz --- autoinstall ds='nocloud-net;s=http://{{ .HTTPIP }}:{{ .HTTPPort }}/'",
  "<enter><wait>",
  "<wait><wait><wait>initrd /casper/initrd<enter><wait>", "<wait>boot<enter>"]
  boot_wait    = "5s"
  disks {
    # type option not applied
    type              = "virtio"
    disk_size         = "35840M"
    storage_pool      = "drbdstorage"
    storage_pool_type = "lvm"
  }
  scsi_controller       = "virtio-scsi-pci"
  insecure_skip_tls_verify = "true"
  iso_file                 = "${var.proxmox_datastore}:iso/${var.iso_file}"
  memory                   = 2048
  network_adapters {
    model    = "virtio"
    bridge   = "vmbr0"
    firewall = true
  }
  node          = "${var.proxmox_node}"
  password      = "${var.proxmox_password}"
  proxmox_url   = "${var.proxmox_url}"
  ssh_password  = "${var.build_password}"
  ssh_timeout   = "30m"
  ssh_username  = "${var.build_username}"
  template_name = "${var.proxmox_template_name}"
  unmount_iso   = true
  username      = "${var.proxmox_username}"
  vm_id         = "${var.proxmox_vm_id}"
  # Activate only if we can configure serial terminal at installer startup
  #serials       = [
  #  "socket"
  #]

  #http_directory           = "${abspath(path.root)}/http"
  http_content = {
    "/meta-data" = file("${abspath(path.root)}/http/meta-data")
    "/user-data" = templatefile("${abspath(path.root)}/http/user-data.pkrtpl.hcl", {
      build_username           = var.build_username
      build_password           = var.build_password
      build_password_encrypted = var.build_password_encrypted
      vm_guest_os_language     = var.vm_guest_os_timezone
      vm_guest_os_keyboard     = var.vm_guest_os_keyboard
      vm_guest_os_timezone     = var.vm_guest_os_timezone
      vm_guest_os_fstype       = var.vm_guest_os_fstype
      vm_guest_os_hostname     = var.vm_guest_os_hostname
    })
  }
}

build {
  sources = ["source.proxmox.autogenerated_1"]

  provisioner "shell" {
    inline = ["while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done", "sudo apt-get update", "sudo apt-get upgrade -y"]
  }

}
