source "proxmox" "autogenerated_1" {
  boot_command = ["c",
    "<wait><wait><wait>linux /casper/vmlinuz --- autoinstall ds='nocloud-net;s=http://{{ .HTTPIP }}:{{ .HTTPPort }}/'",
    "<enter><wait>",
  "<wait><wait><wait>initrd /casper/initrd<enter><wait>", "<wait>boot<enter>"]
  boot_wait = "5s"
  disks {
    type              = var.vm_disk_type
    disk_size         = var.vm_disk_size
    storage_pool      = var.proxmox_storage_pool
    storage_pool_type = var.proxmox_storage_pool_type
  }
  scsi_controller          = var.proxmox_scsi_controller
  insecure_skip_tls_verify = var.proxmox_insecure
  iso_file                 = "${var.proxmox_datastore}:iso/${var.iso_file}"
  memory                   = var.vm_memory
  network_adapters {
    model    = var.vm_net_iface_type
    bridge   = var.vm_net_bridge_name
    firewall = var.vm_net_firewall
  }
  node          = var.proxmox_node
  password      = var.proxmox_password
  proxmox_url   = var.proxmox_url
  ssh_password  = var.build_password
  ssh_timeout   = "45m"
  ssh_username  = var.build_username
  template_name = var.proxmox_template_name
  unmount_iso   = true
  username      = var.proxmox_username
  vm_id         = var.proxmox_vm_id
  # Activate only if we can configure serial terminal at installer startup
  #serials       = [
  #  "socket"
  #]
  http_content = {
    "/meta-data" = file("${abspath(path.root)}/http/meta-data")
    "/user-data" = templatefile("${abspath(path.root)}/http/user-data.pkrtpl.hcl", {
      build_username           = var.build_username
      build_password           = var.build_password
      build_password_encrypted = var.build_password_encrypted
      vm_language              = var.vm_timezone
      vm_keyboard              = var.vm_keyboard
      vm_timezone              = var.vm_timezone
      vm_fstype                = var.vm_fstype
      vm_hostname              = var.vm_hostname
    })
  }
}

build {
  sources = ["source.proxmox.autogenerated_1"]

  provisioner "shell" {
    inline = ["while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done", "sudo apt-get update", "sudo apt-get upgrade -y"]
  }
}
